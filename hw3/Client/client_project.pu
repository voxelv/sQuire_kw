@startuml
hide circle
hide empty members

title <b>ProjectManager</b>\n<size:12>Authors: slip5295, denn2725</size>\n<size:12>Reviewed by: juts3869</size>

class "Client" as sq_c

class "ProjectManager" as sq_projmgr {
    -server : Server
    -projects : Project[]
    -userTracker : UserTracker
    -editQueue : EditQueue
    -editor : Editor
    +updateToServer()
}

class "Server" as sq_server

class "Project" as proj {
    -owners : UserAccount[]
    -participants : UserAccount[]
    -isOnline : boolean
    -onlineUsers : UserAccount[]
    -lastUpdated : String
    +downloadProjectPackage()
    +importProjectPackage()
    +compileProject()
    +runProject()
    +debugProject()
}

class "File" as file {
    -filename : String
    -filepath : String
    -
    +doFileStuff()
}

class "Editor" as editor {
    -currentFile : File
    -currentView : View
    +setView(View)
}

class "View" as a_view <<Abstract>>{
    +displayView()
}

class "UserEditsView" as ue_view {
    -databaseHook
}

class "SyntaxColoringView" as sc_view {
    -interpreterHook
}

class "UserTracker" as projmgr_utrack {
    -loc : Location
    -focus : String
    +update()
}

class "EditQueue" as projmgr_editq {
    -edits : AtomicEdit[]
    +enqueueEdit()
    +pushEditsToServer(Server server)
}

class "AtomicEdit" as editq_atomedit {
    -type : String
    -loc : Location
    -val : Object
    +packForTransport() : TCPPacket
}

class "Location" as loc {
    -file : String
    -lineNumber : int
    -lineColumn : int
    -length : int
    +set(String file, int line, int col, int len)
}

sq_c *-- sq_projmgr

sq_projmgr o-left- sq_server : Communicates With over TCP

sq_projmgr -- projmgr_utrack : Track User
sq_projmgr o-- projmgr_editq : Log Edits
sq_projmgr o-- "*" proj

proj o-- "*" file

sq_projmgr o-- "*" editor
editor o-- a_view
a_view <|-- ue_view
a_view <|-- sc_view

editor o-- file

projmgr_editq o-- "*" editq_atomedit : Stores and Sends

projmgr_utrack o-- loc
projmgr_utrack -- editq_atomedit : Generates

editq_atomedit o-- loc


@enduml